name: PR Checks

on:
  pull_request:
    branches: [ main, master, develop ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Run go vet
      run: go vet ./...

    - name: Run gofmt
      run: |
        if [ -n "$(gofmt -s -l .)" ]; then
          echo "Go files must be formatted with gofmt. Please run:"
          echo "  gofmt -s -w ."
          gofmt -s -l .
          exit 1
        fi

    - name: Install goimports
      run: go install golang.org/x/tools/cmd/goimports@latest

    - name: Run goimports
      run: |
        if [ -n "$(goimports -l .)" ]; then
          echo "Go files must be formatted with goimports. Please run:"
          echo "  goimports -w ."
          goimports -l .
          exit 1
        fi

    - name: Install misspell
      run: go install github.com/client9/misspell/cmd/misspell@latest

    - name: Run misspell
      run: misspell -error .

  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Run tests
      run: go test -v -race ./...

  coverage:
    name: Coverage Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Run tests with coverage
      run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Generate coverage HTML
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: pr-coverage-report
        path: |
          coverage.out
          coverage.html
        retention-days: 15

    - name: Post coverage comment
      if: always()
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const { execSync } = require('child_process');
          
          // Parse coverage percentage
          const result = execSync('go tool cover -func=coverage.out | grep total').toString();
          const match = result.match(/(\d+\.\d+)%/);
          const percentage = match ? match[1] : 'unknown';
          
          const comment = `## ðŸ“Š Coverage Report
          
          **Total Coverage:** ${percentage}%
          
          ðŸ“¥ Download the full HTML coverage report from the [Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          
          To view it:
          1. Download the \`pr-coverage-report\` artifact
          2. Unzip it
          3. Open \`coverage.html\` in your browser
          `;
          
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Failed to post comment:', error.message);
            console.log('Coverage:', percentage + '%');
          }
